name: Dockerize & push to cluster

on:
  workflow_dispatch:
    
  push:
    branches:
      - 'master'  
    tags:
      - '*.*.*'
      - 'v*.*.*'

jobs:
  checkout-build-dockerize-and-redeploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          #submodules: true
          #lfs: true
          clean: true
      - name: Check initial folder
        run: |
          echo "Checked out code"
          ls -la
          echo $PWD
      
      - name: Extract Git Branch information
        id: branch_name
        run: |
          MBRANCH=${GITHUB_REF#refs/*/}
          GITSHA=${GITHUB_SHA::8}
          BRANCH=${MBRANCH#feature/}
          echo "$BRANCH";
          if ["$BRANCH" == "develop"]; then BRANCH="$(BRANCH)$(date +%s)"; fi
          
          echo ::set-output name=SOURCE_NAME::$BRANCH
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo SOURCE_NAME $SOURCE_NAME $BRANCH ~ALSO~ SOURCE_TAG $SOURCE_TAG ~ALSO SHA $GITSHA

      - uses: docker/login-action@v1
        if: ${{ !env.ACT }}
        with:
          username: hustlegotreal
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag docker file
        if: ${{ !env.ACT }}
        run: |
          docker build --file ./production.dockerfile --tag hustlegotreal/tools:hgrweb-${{ steps.branch_name.outputs.SOURCE_NAME }} ./
          
      - name: Push docker image to dockerhub
        if: ${{ !env.ACT }}
        run: |
          # echo "${INPUT_USERNAME}" | docker login -u ${INPUT_PASSWORD} --password-stdin ${INPUT_REGISTRY}
          # echo $DOCKER_CONFIG;
          # ls -la $DOCKER_CONFIG;
          # cat $DOCKER_CONFIG/config.json;
          docker push hustlegotreal/tools:hgrweb-${{ steps.branch_name.outputs.SOURCE_NAME }}
      - name: Generate patch command
        if: ${{ !env.ACT }}
        id: patch_cmd
        run: |
          CMD='{"spec": {"template": {"spec": {"containers": [{"name":"web","image": "hustlegotreal/tools:hgrweb-${{ steps.branch_name.outputs.SOURCE_NAME }}"}] }}}}'
          echo Going to execute : $CMD
          echo ::set-output name=K8sPATCH::$CMD
    
      - name: Update version in Cluster
        if: ${{ !env.ACT }}
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG }} 
          version: v1.19.8
          command: "--insecure-skip-tls-verify patch deployment/hgrweb -n live --patch '${{ steps.patch_cmd.outputs.K8sPATCH}}'"
          
      - name: Redeploy
        if: ${{ !env.ACT }}
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG }}
          version: v1.19.8
          command: "--insecure-skip-tls-verify rollout restart deployments/hgrweb -n live"
    
      - name: Verify Deployment
        if: ${{ !env.ACT }} 
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBECONFIG }}
          version: v1.19.8
          command: "--insecure-skip-tls-verify rollout status deployment hgrweb -n live"
